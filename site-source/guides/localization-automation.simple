Introduction
	UIZE provides a system for automating various processes relating to the localization of a codebase.

	Metrics Reports
		A metrics report can be produced for a project by using the =metrics= localization method.

		EXAMPLE
		.............................................................................
		node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=metrics
		.............................................................................

		The =metrics= method analyzes the primary language resource strings for a porject and generates a =.json= file to the following path...

		............................................................
		[workingFolder]/[projectName]/metrics/[primaryLanguage].json
		............................................................

		The metrics report is a JSON file, so the data contained in it could be loaded by other scripts or an application and used to present a visualization of the metrics or to estimate cost for translation.

		Metrics Report Contents
			Total Word Count
				The total number of translatable words in all primary language resource files for the project is represented by the =resourceFiles= property.

				The value of the =wordCount= property is only an estimate and the accuracy of the value depends on how well the project is defined to understand the difference between `translatable words` and `non-translatable text`.

				The value of this property is useful when estimating the full translation cost for a project, since translators often charge for their services based upon word count and a cost per word.

			Total Character Count
				The total number of translatable words in all primary language resource files for the project is represented by the =resourceFiles= property.

				The accuracy of the value of this property depends on the accuracy of the =wordCount= property, since this property is the sum of the character count for all `translatable words`. This value can be useful when estimating the full translation cost for a project, since translators may base cost estimates for their services partially upon total character count for all `translatable words`.

			Total Resource Files
				The total number of resource files for the language is represented by the =resourceFiles= property.

				The value of the =resourceFiles= property reflects the total number of distributed resource files for the language and not the total for all languages, so this value doesn't increase as you add support for new languages.

			Brand-specific Resource Files
				The total number of brand-specific resource files for the language is represented by the =brandSpecificResourceFiles= property.

				What constitutes a brand-specific resource file will vary by project and depend on the project definition. Typically, brand-specific resource files provide overrides for certain resource strings that need to be different for specific brands, so the number of brand-specific resource files is usually smaller than the total number of resource files. Moreover, different brands may have a differing number of brand-specific resource files.

				The number of brand-specific resource files, expressed as a percentage of total resource files, is represented for convenience in the =brandSpecificResourceFilesPercent= property.

	### Key Features
		.

		Supports Multiple Projects
			.

		Adaptable to Different Project Types
			.

		Performs Diffing to Reduce Translation Load
			.

		Performs Automatic Pseudo-localization
			.

	Accessed Through a Build Script
		The various localization methods can be accessed using the =Uize.Build.Loc= build script.

		Running the Build Script
			The localization build script can be run in NodeJS using the following command...

			SYNTAX
			..................................................................................
			node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=[methodName]
			..................................................................................

			Parameters
				project
					The =project= parameter is used to specify the project for which the specified localization method should be executed.

					The value specified for the =project= parameter should match one of the keys in the =moduleConfigs ['Uize.Build.Loc'].projects= object of the =uize-config.json= file.

					Executing a Method For All Projects
						To execute a localization method for all projects listed in the config, one can either omit the =project= parameter or one can specify the special "*" wildcard value.

						EXAMPLES
						......................................................................
						node [pathToUize]build.js Uize.Build.Loc method=[methodName]
						node [pathToUize]build.js Uize.Build.Loc project=* method=[methodName]
						......................................................................

				method
					The =method= parameter is used to specify the localization method that should be executed for the specified project.

					The value of the =method= parameter should be the name of any of the `service methods` supported by the localization service.

		### Service Methods
			.

			metrics
				Metrics can be generated for a project using the =metrics= method of the localization service.

				.............................................................................
				node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=metrics
				.............................................................................

			export
				.

				............................................................................
				node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=export
				............................................................................

			import
				.

				............................................................................
				node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=import
				............................................................................

			exportJobs
				.

				................................................................................
				node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=exportJobs
				................................................................................

			importJobs
				.

				................................................................................
				node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=importJobs
				................................................................................

			extract
				.

				.............................................................................
				node [pathToUize]build.js Uize.Build.Loc project=[projectName] method=extract
				.............................................................................

		Configuring Projects
			.

			Per Project Configuration Options
				.

				Service Adapter
					.

				Languages
					.

				Primary Language
					.

				Pseudo-locale
					.

			Common Project Configuration Options
				.

		Pseudo-localization
			.

	###
		Distributed Resource Files
			.

		Consolidated Resource Files
			.

		Translation Job Files
			.

	### Use With Other Projects
		.

	### Key Concepts
		Translatable Words
			.

		Non-translatable Text
			.

